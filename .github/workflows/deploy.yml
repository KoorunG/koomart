
name: Build and deploy to AWS EC2

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

env:
  PROJECT_NAME: kotlin-toy-project
  BUCKET_NAME: kotlintoyprojectbucket
  CODE_DEPLOY_APP_NAME: kotlin-toy-project-codedeploy
  DEPLOYMENT_GROUP_NAME: kotlin-toy-project-codedeploy

jobs:
  build:
    name: Build my app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup JDK 17
        uses: actions/setup-java@v4.0.0
        with:
          # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
          java-version: '17'
          # Java distribution. See the list of supported distributions in README file
          distribution: 'corretto'

      - name: Setup PostgreSQL
        uses: Harmon758/postgresql-action@v1.0.0
        with:
          # Version of PostgreSQL to use
          # postgresql version: # optional, default is latest
          # POSTGRES_DB - name for the default database that is created
          postgresql db: ${{ secrets.PG_DB }}
          # POSTGRES_USER - create the specified user with superuser power
          postgresql user: ${{ secrets.PG_USER }}
          # POSTGRES_PASSWORD - superuser password
          postgresql password: ${{ secrets.PG_PASSWORD }}
          
          
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

      - name: Zip file
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.IAM_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.IAM_SECRET_ACCESS_KEY }}

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      - name: Code Deploy
        run: aws deploy create-deployment --application-name $CODE_DEPLOY_APP_NAME --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name $DEPLOYMENT_GROUP_NAME --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
          
          
